// Generated by Framer (ab692b1)

import { addFonts, addPropertyControls, ControlType, cx, CycleVariantState, SVG, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";

const cycleOrder = ["WrXhNFYOn", "UrAEL4TC_"];

const serializationHash = "framer-Ya3yg"

const variantClassNames = {UrAEL4TC_: "framer-v-17phonx", WrXhNFYOn: "framer-v-16pnsby"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const humanReadableVariantMap = {Big: "WrXhNFYOn", Small: "UrAEL4TC_"}

const getProps = ({height, id, width, ...props}) => { return {...props, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "WrXhNFYOn"} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;variant?: keyof typeof humanReadableVariantMap; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const {style, className, layoutId, variant, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({cycleOrder, defaultVariant: "WrXhNFYOn", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-16pnsby", className, classNames)} data-framer-name={"Big"} layoutDependency={layoutDependency} layoutId={"WrXhNFYOn"} ref={refBinding} style={{...style}} {...addPropertyOverrides({UrAEL4TC_: {"data-framer-name": "Small"}}, baseVariant, gestureVariant)}><SVG className={"framer-1olofeh"} data-framer-name={"Quotes"} layout={"position"} layoutDependency={layoutDependency} layoutId={"LgJr3HaHz"} opacity={1} svg={"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 29 24\"><path d=\"M 7.15 24 C 5.771 24 4.641 23.715 3.763 23.143 C 2.893 22.58 2.155 21.833 1.599 20.953 C 0.972 19.873 0.533 18.762 0.282 17.619 C 0.094 16.413 0 15.429 0 14.666 C 0 11.556 0.784 8.73 2.352 6.19 C 3.92 3.65 6.366 1.587 9.69 0 L 10.537 1.714 C 8.593 2.539 6.899 3.841 5.457 5.619 C 4.077 7.397 3.387 9.207 3.387 11.047 C 3.387 11.809 3.481 12.476 3.669 13.047 C 4.672 12.223 5.833 11.809 7.15 11.809 C 8.781 11.809 10.192 12.349 11.384 13.428 C 12.575 14.508 13.171 16 13.171 17.905 C 13.171 19.683 12.575 21.143 11.384 22.285 C 10.192 23.428 8.781 24 7.15 24 Z M 23.143 24 C 21.764 24 20.635 23.715 19.757 23.143 C 18.887 22.58 18.149 21.833 17.593 20.953 C 16.965 19.873 16.527 18.762 16.276 17.619 C 16.088 16.413 15.994 15.429 15.994 14.666 C 15.994 11.556 16.778 8.73 18.346 6.19 C 19.914 3.65 22.359 1.587 25.684 0 L 26.531 1.714 C 24.586 2.539 22.892 3.841 21.45 5.619 C 20.07 7.397 19.38 9.207 19.38 11.047 C 19.38 11.809 19.474 12.476 19.662 13.047 C 20.666 12.223 21.827 11.809 23.143 11.809 C 24.775 11.809 26.186 12.349 27.377 13.428 C 28.569 14.508 29.165 16 29.165 17.905 C 29.165 19.683 28.569 21.143 27.377 22.285 C 26.186 23.428 24.774 24 23.143 24 Z\" fill=\"rgb(179,179,179)\"></path></svg>"} svgContentId={9168637942} withExternalLayout {...addPropertyOverrides({UrAEL4TC_: {svg: "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 15 12\"><path d=\"M 3.698 12 C 2.985 12 2.401 11.857 1.947 11.572 C 1.497 11.29 1.115 10.916 0.827 10.476 C 0.503 9.937 0.276 9.381 0.146 8.809 C 0.049 8.206 0 7.715 0 7.333 C 0 5.778 0.406 4.365 1.217 3.095 C 2.028 1.825 3.293 0.794 5.012 0 L 5.45 0.857 C 4.445 1.27 3.569 1.921 2.822 2.81 C 2.109 3.698 1.752 4.603 1.752 5.524 C 1.752 5.905 1.801 6.238 1.898 6.524 C 2.417 6.111 3.017 5.905 3.698 5.905 C 4.542 5.905 5.272 6.175 5.888 6.714 C 6.504 7.254 6.813 8 6.813 8.953 C 6.813 9.841 6.505 10.572 5.888 11.143 C 5.272 11.714 4.542 12 3.698 12 Z M 11.971 12 C 11.257 12 10.673 11.857 10.219 11.572 C 9.769 11.29 9.387 10.916 9.1 10.476 C 8.775 9.937 8.548 9.381 8.419 8.809 C 8.321 8.206 8.273 7.715 8.273 7.333 C 8.273 5.778 8.678 4.365 9.489 3.095 C 10.3 1.825 11.565 0.794 13.285 0 L 13.723 0.857 C 12.717 1.27 11.841 1.921 11.095 2.81 C 10.381 3.698 10.024 4.603 10.024 5.524 C 10.024 5.905 10.073 6.238 10.17 6.524 C 10.689 6.111 11.29 5.905 11.971 5.905 C 12.815 5.905 13.544 6.175 14.161 6.714 C 14.777 7.254 15.085 8 15.085 8.953 C 15.085 9.841 14.777 10.572 14.161 11.143 C 13.544 11.714 12.814 12 11.971 12 Z\" fill=\"rgb(179,179,179)\"></path></svg>", svgContentId: 9189112517}}, baseVariant, gestureVariant)}/></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-Ya3yg.framer-9i45or, .framer-Ya3yg .framer-9i45or { display: block; }", ".framer-Ya3yg.framer-16pnsby { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }", ".framer-Ya3yg .framer-1olofeh { flex: none; height: 24px; position: relative; width: 29px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-Ya3yg.framer-16pnsby { gap: 0px; } .framer-Ya3yg.framer-16pnsby > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-Ya3yg.framer-16pnsby > :first-child { margin-left: 0px; } .framer-Ya3yg.framer-16pnsby > :last-child { margin-right: 0px; } }", ".framer-Ya3yg.framer-v-17phonx .framer-1olofeh { height: 12px; width: 15px; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 24
 * @framerIntrinsicWidth 29
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"UrAEL4TC_":{"layout":["auto","auto"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerUXxoGouDT: React.ComponentType<Props> = withCSS(Component, css, "framer-Ya3yg") as typeof Component;
export default FramerUXxoGouDT;

FramerUXxoGouDT.displayName = "Quotes";

FramerUXxoGouDT.defaultProps = {height: 24, width: 29};

addPropertyControls(FramerUXxoGouDT, {variant: {options: ["WrXhNFYOn", "UrAEL4TC_"], optionTitles: ["Big", "Small"], title: "Variant", type: ControlType.Enum}} as any)

addFonts(FramerUXxoGouDT, [{explicitInter: true, fonts: []}], {supportsExplicitInterCodegen: true})