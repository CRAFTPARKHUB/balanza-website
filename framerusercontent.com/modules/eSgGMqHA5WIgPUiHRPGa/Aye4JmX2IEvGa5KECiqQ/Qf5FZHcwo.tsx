// Generated by Framer (b4533c2)

import { addFonts, ComponentViewportProvider, cx, getFonts, SmartComponentScopedContainer, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import Ticker from "https://framerusercontent.com/modules/B2xAlJLcN0gOnt11mSPw/bSG2fUXcc43766cbIglD/Ticker.js";
import getLocalizedValue from "../localization/Qf5FZHcwo";
import QuoteSmall from "./V40lWy_PE";
const QuoteSmallFonts = getFonts(QuoteSmall);
const TickerFonts = getFonts(Ticker);

const serializationHash = "framer-XMNtz"

const variantClassNames = {gRK0BbcPO: "framer-v-146587u"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const addImageAlt = (image, alt) => {
    if (!image || typeof image !== "object") {
        return;
    };
    return { ...image, alt };
};


const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({height, id, width, ...props}) => { return {...props} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const { style, className, layoutId, variant, ...restProps } = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "gRK0BbcPO", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-146587u", className, classNames)} data-framer-name={"Default"} layoutDependency={layoutDependency} layoutId={"gRK0BbcPO"} ref={refBinding} style={{...style}}><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-1mzxsom-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"MLSEc1ry0-container"} nodeId={"MLSEc1ry0"} rendersWithMotion scopeId={"Qf5FZHcwo"}><Ticker alignment={"center"} direction={"left"} fadeOptions={{fadeAlpha: 0, fadeContent: true, fadeInset: 0, fadeWidth: 25, overflow: false}} gap={24} height={"100%"} hoverFactor={1} id={"MLSEc1ry0"} layoutId={"MLSEc1ry0"} padding={24} paddingBottom={24} paddingLeft={24} paddingPerSide={false} paddingRight={24} paddingTop={24} sizingOptions={{heightType: true, widthType: true}} slots={[<ComponentViewportProvider height={160} width={"400px"}><SmartComponentScopedContainer className={"framer-l56jwh-container"} inComponentSlot layoutDependency={layoutDependency} layoutId={"Xn_bn5XVb-container"} nodeId={"Xn_bn5XVb"} rendersWithMotion scopeId={"Qf5FZHcwo"}><QuoteSmall height={"100%"} id={"Xn_bn5XVb"} IPLSnBZMZ={getLocalizedValue("v3", activeLocale) ?? <React.Fragment><p>The moment I step into Vistiq, the outside world fades. It’s where I go to reset — mind, body, and spirit.</p></React.Fragment>} layoutId={"Xn_bn5XVb"} ldSineP0J={addImageAlt({pixelHeight: 480, pixelWidth: 480, src: "https://framerusercontent.com/images/Yj75uUzBke8UeYiRKxUE2jnj2Y.png"}, getLocalizedValue("v0", activeLocale) ?? "Woman")} style={{width: "100%"}} width={"100%"} YgyMZKvAp={getLocalizedValue("v2", activeLocale) ?? "Travel Writer"} yTBITDqfI={getLocalizedValue("v1", activeLocale) ?? "Aria M"}/></SmartComponentScopedContainer></ComponentViewportProvider>, <ComponentViewportProvider height={160} width={"400px"}><SmartComponentScopedContainer className={"framer-t6pjs2-container"} inComponentSlot layoutDependency={layoutDependency} layoutId={"RntxNfk5J-container"} nodeId={"RntxNfk5J"} rendersWithMotion scopeId={"Qf5FZHcwo"}><QuoteSmall height={"100%"} id={"RntxNfk5J"} IPLSnBZMZ={getLocalizedValue("v6", activeLocale) ?? <React.Fragment><p>The facial was amazing — but what really stood out was how seen and cared for I felt. It’s rare.</p></React.Fragment>} layoutId={"RntxNfk5J"} ldSineP0J={addImageAlt({pixelHeight: 480, pixelWidth: 480, src: "https://framerusercontent.com/images/cjqP7NAZxNJpuIUQWPyS3SpJdg.png"}, getLocalizedValue("v0", activeLocale) ?? "Woman")} style={{width: "100%"}} width={"100%"} YgyMZKvAp={getLocalizedValue("v5", activeLocale) ?? "Creative Director"} yTBITDqfI={getLocalizedValue("v4", activeLocale) ?? "Jade R."}/></SmartComponentScopedContainer></ComponentViewportProvider>, <ComponentViewportProvider height={160} width={"400px"}><SmartComponentScopedContainer className={"framer-ngemdn-container"} inComponentSlot layoutDependency={layoutDependency} layoutId={"p0Y3boQoi-container"} nodeId={"p0Y3boQoi"} rendersWithMotion scopeId={"Qf5FZHcwo"}><QuoteSmall height={"100%"} id={"p0Y3boQoi"} IPLSnBZMZ={getLocalizedValue("v9", activeLocale) ?? <React.Fragment><p>I booked my first deep tissue massage on a whim. Now it’s a monthly ritual I’ll never give up.</p></React.Fragment>} layoutId={"p0Y3boQoi"} ldSineP0J={addImageAlt({pixelHeight: 480, pixelWidth: 480, src: "https://framerusercontent.com/images/gcD4NuEA5uXgg7CNoYjHMWxr8M.png"}, getLocalizedValue("v0", activeLocale) ?? "Woman")} style={{width: "100%"}} width={"100%"} YgyMZKvAp={getLocalizedValue("v8", activeLocale) ?? "Software Engineer"} yTBITDqfI={getLocalizedValue("v7", activeLocale) ?? "Camille B."}/></SmartComponentScopedContainer></ComponentViewportProvider>, <ComponentViewportProvider height={160} width={"400px"}><SmartComponentScopedContainer className={"framer-ufi2fq-container"} inComponentSlot layoutDependency={layoutDependency} layoutId={"vFL8QKsh2-container"} nodeId={"vFL8QKsh2"} rendersWithMotion scopeId={"Qf5FZHcwo"}><QuoteSmall height={"100%"} id={"vFL8QKsh2"} IPLSnBZMZ={getLocalizedValue("v12", activeLocale) ?? <React.Fragment><p>Everything from the lighting to the therapist’s energy feels intentional. Vistiq isn’t a spa. It’s an experience.</p></React.Fragment>} layoutId={"vFL8QKsh2"} ldSineP0J={addImageAlt({pixelHeight: 480, pixelWidth: 480, src: "https://framerusercontent.com/images/QatWPokTyqZXDiIrJEyV7q9nZA.png"}, getLocalizedValue("v0", activeLocale) ?? "Woman")} style={{width: "100%"}} width={"100%"} YgyMZKvAp={getLocalizedValue("v11", activeLocale) ?? "Yoga Instructor"} yTBITDqfI={getLocalizedValue("v10", activeLocale) ?? "Lena D."}/></SmartComponentScopedContainer></ComponentViewportProvider>]} speed={20} style={{height: "100%", width: "100%"}} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-XMNtz.framer-1afrkpm, .framer-XMNtz .framer-1afrkpm { display: block; }", ".framer-XMNtz.framer-146587u { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 1152px; }", ".framer-XMNtz .framer-1mzxsom-container { flex: 1 0 0px; height: 160px; position: relative; width: 1px; }", ".framer-XMNtz .framer-l56jwh-container, .framer-XMNtz .framer-t6pjs2-container, .framer-XMNtz .framer-ngemdn-container, .framer-XMNtz .framer-ufi2fq-container { height: auto; position: relative; width: 400px; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 160
 * @framerIntrinsicWidth 1152
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerQf5FZHcwo: React.ComponentType<Props> = withCSS(Component, css, "framer-XMNtz") as typeof Component;
export default FramerQf5FZHcwo;

FramerQf5FZHcwo.displayName = "Ticker - Quotes";

FramerQf5FZHcwo.defaultProps = {height: 160, width: 1152};

addFonts(FramerQf5FZHcwo, [{explicitInter: true, fonts: []}, ...QuoteSmallFonts, ...TickerFonts], {supportsExplicitInterCodegen: true})