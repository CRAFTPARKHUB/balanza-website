// Generated by Framer (9d598a4)

import { addFonts, addPropertyControls, ControlType, cx, CycleVariantState, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";

const enabledGestures = {EENmTdWKA: {hover: true}, xSZVkabv0: {hover: true}};

const cycleOrder = ["xSZVkabv0", "EENmTdWKA"];

const serializationHash = "framer-Zor3B"

const variantClassNames = {EENmTdWKA: "framer-v-lzdn8n", xSZVkabv0: "framer-v-1n8bmhl"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const humanReadableVariantMap = {Close: "EENmTdWKA", Default: "xSZVkabv0"}

const getProps = ({click, height, id, width, ...props}) => { return {...props, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "xSZVkabv0", xziRj2ur1: click ?? props.xziRj2ur1} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;variant?: keyof typeof humanReadableVariantMap;click?: any; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const {style, className, layoutId, variant, xziRj2ur1, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({cycleOrder, defaultVariant: "xSZVkabv0", enabledGestures, ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant)

const onTapz5euos = activeVariantCallback(async (...args) => {
setGestureState({isPressed: false})
if (xziRj2ur1) {const res = await xziRj2ur1(...args);
if (res === false) return false;}
})

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-1n8bmhl", className, classNames)} data-framer-name={"Default"} data-highlight layoutDependency={layoutDependency} layoutId={"xSZVkabv0"} onTap={onTapz5euos} ref={refBinding} style={{backgroundColor: "var(--token-5df573a8-5c6e-4a5b-bca6-248c4c391d54, rgb(255, 255, 255))", borderBottomLeftRadius: 24, borderBottomRightRadius: 24, borderTopLeftRadius: 24, borderTopRightRadius: 24, boxShadow: "0px 10px 20px 0px rgba(51, 51, 51, 0.05)", ...style}} {...addPropertyOverrides({"EENmTdWKA-hover": {"data-framer-name": undefined}, "xSZVkabv0-hover": {"data-framer-name": undefined}, EENmTdWKA: {"data-framer-name": "Close"}}, baseVariant, gestureVariant)}><motion.div className={"framer-l7bs99"} data-framer-name={"line-01"} layoutDependency={layoutDependency} layoutId={"Obddrjnwv"} style={{backgroundColor: "var(--token-922bf7e2-6566-450d-a5db-d314f15d527e, rgb(51, 51, 51))", borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, rotate: 0}} variants={{"EENmTdWKA-hover": {rotate: -45}, "xSZVkabv0-hover": {rotate: 0}, EENmTdWKA: {rotate: 45}}}/><motion.div className={"framer-15evzfg"} data-framer-name={"line-02"} layoutDependency={layoutDependency} layoutId={"ZYwLnn8pn"} style={{backgroundColor: "var(--token-922bf7e2-6566-450d-a5db-d314f15d527e, rgb(51, 51, 51))", borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, rotate: 0}} variants={{"EENmTdWKA-hover": {rotate: 45}, "xSZVkabv0-hover": {rotate: 0}, EENmTdWKA: {rotate: -45}}}/></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-Zor3B.framer-1pnkf3v, .framer-Zor3B .framer-1pnkf3v { display: block; }", ".framer-Zor3B.framer-1n8bmhl { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 24px; height: 48px; justify-content: center; overflow: hidden; padding: 0px 24px 0px 24px; position: relative; width: 48px; will-change: var(--framer-will-change-override, transform); }", ".framer-Zor3B .framer-l7bs99 { flex: none; height: 1px; left: calc(50.00000000000002% - 24px / 2); overflow: hidden; position: absolute; top: 19px; width: 24px; will-change: var(--framer-will-change-override, transform); z-index: 1; }", ".framer-Zor3B .framer-15evzfg { bottom: 19px; flex: none; height: 1px; left: calc(50.00000000000002% - 24px / 2); overflow: hidden; position: absolute; width: 24px; will-change: var(--framer-will-change-override, transform); z-index: 1; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-Zor3B.framer-1n8bmhl { gap: 0px; } .framer-Zor3B.framer-1n8bmhl > * { margin: 0px; margin-left: calc(24px / 2); margin-right: calc(24px / 2); } .framer-Zor3B.framer-1n8bmhl > :first-child { margin-left: 0px; } .framer-Zor3B.framer-1n8bmhl > :last-child { margin-right: 0px; } }", ".framer-Zor3B.framer-v-lzdn8n .framer-l7bs99 { top: calc(50.00000000000002% - 1px / 2); }", ".framer-Zor3B.framer-v-lzdn8n .framer-15evzfg { bottom: unset; top: calc(50.00000000000002% - 1px / 2); }", ".framer-Zor3B.framer-v-1n8bmhl.hover .framer-l7bs99 { bottom: 19px; top: unset; }", ".framer-Zor3B.framer-v-1n8bmhl.hover .framer-15evzfg { bottom: unset; top: 19px; }", ".framer-Zor3B.framer-v-lzdn8n.hover .framer-15evzfg { bottom: unset; }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 48
 * @framerIntrinsicWidth 48
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]},"EENmTdWKA":{"layout":["fixed","fixed"]},"vJOvIiDYt":{"layout":["fixed","fixed"]},"Wh_yXNEzS":{"layout":["fixed","fixed"]}}}
 * @framerVariables {"xziRj2ur1":"click"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerLjIOUvYuE: React.ComponentType<Props> = withCSS(Component, css, "framer-Zor3B") as typeof Component;
export default FramerLjIOUvYuE;

FramerLjIOUvYuE.displayName = "Menu";

FramerLjIOUvYuE.defaultProps = {height: 48, width: 48};

addPropertyControls(FramerLjIOUvYuE, {variant: {options: ["xSZVkabv0", "EENmTdWKA"], optionTitles: ["Default", "Close"], title: "Variant", type: ControlType.Enum}, xziRj2ur1: {title: "Click", type: ControlType.EventHandler}} as any)

addFonts(FramerLjIOUvYuE, [{explicitInter: true, fonts: []}], {supportsExplicitInterCodegen: true})