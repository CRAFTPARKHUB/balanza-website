// Generated by Framer (9d598a4)
import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    useActiveVariantCallback,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
const enabledGestures = {
    EENmTdWKA: {
        hover: true
    },
    xSZVkabv0: {
        hover: true
    }
};
const cycleOrder = ["xSZVkabv0", "EENmTdWKA"];
const serializationHash = "framer-Zor3B";
const variantClassNames = {
    EENmTdWKA: "framer-v-lzdn8n",
    xSZVkabv0: "framer-v-1n8bmhl"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    bounce: .2,
    delay: 0,
    duration: .4,
    type: "spring"
};
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
    Close: "EENmTdWKA",
    Default: "xSZVkabv0"
};
const getProps = ({
    click,
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        variant: humanReadableVariantMap[props.variant] ? ? props.variant ? ? "xSZVkabv0",
        xziRj2ur1: click ? ? props.xziRj2ur1
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        xziRj2ur1,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        cycleOrder,
        defaultVariant: "xSZVkabv0",
        enabledGestures,
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const {
        activeVariantCallback,
        delay
    } = useActiveVariantCallback(baseVariant);
    const onTapz5euos = activeVariantCallback(async (...args) => {
        setGestureState({
            isPressed: false
        });
        if (xziRj2ur1) {
            const res = await xziRj2ur1(...args);
            if (res === false) return false;
        }
    });
    const sharedStyleClassNames = [];
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsxs(motion.div, { ...restProps,
                    ...gestureHandlers,
                    className: cx(scopingClassNames, "framer-1n8bmhl", className, classNames),
                    "data-framer-name": "Default",
                    "data-highlight": true,
                    layoutDependency: layoutDependency,
                    layoutId: "xSZVkabv0",
                    onTap: onTapz5euos,
                    ref: refBinding,
                    style: {
                        backgroundColor: "var(--token-5df573a8-5c6e-4a5b-bca6-248c4c391d54, rgb(255, 255, 255))",
                        borderBottomLeftRadius: 24,
                        borderBottomRightRadius: 24,
                        borderTopLeftRadius: 24,
                        borderTopRightRadius: 24,
                        boxShadow: "0px 10px 20px 0px rgba(51, 51, 51, 0.05)",
                        ...style
                    },
                    ...addPropertyOverrides({
                        "EENmTdWKA-hover": {
                            "data-framer-name": undefined
                        },
                        "xSZVkabv0-hover": {
                            "data-framer-name": undefined
                        },
                        EENmTdWKA: {
                            "data-framer-name": "Close"
                        }
                    }, baseVariant, gestureVariant),
                    children: [ /*#__PURE__*/ _jsx(motion.div, {
                        className: "framer-l7bs99",
                        "data-framer-name": "line-01",
                        layoutDependency: layoutDependency,
                        layoutId: "Obddrjnwv",
                        style: {
                            backgroundColor: "var(--token-922bf7e2-6566-450d-a5db-d314f15d527e, rgb(51, 51, 51))",
                            borderBottomLeftRadius: 1,
                            borderBottomRightRadius: 1,
                            borderTopLeftRadius: 1,
                            borderTopRightRadius: 1,
                            rotate: 0
                        },
                        variants: {
                            "EENmTdWKA-hover": {
                                rotate: -45
                            },
                            "xSZVkabv0-hover": {
                                rotate: 0
                            },
                            EENmTdWKA: {
                                rotate: 45
                            }
                        }
                    }), /*#__PURE__*/ _jsx(motion.div, {
                        className: "framer-15evzfg",
                        "data-framer-name": "line-02",
                        layoutDependency: layoutDependency,
                        layoutId: "ZYwLnn8pn",
                        style: {
                            backgroundColor: "var(--token-922bf7e2-6566-450d-a5db-d314f15d527e, rgb(51, 51, 51))",
                            borderBottomLeftRadius: 1,
                            borderBottomRightRadius: 1,
                            borderTopLeftRadius: 1,
                            borderTopRightRadius: 1,
                            rotate: 0
                        },
                        variants: {
                            "EENmTdWKA-hover": {
                                rotate: 45
                            },
                            "xSZVkabv0-hover": {
                                rotate: 0
                            },
                            EENmTdWKA: {
                                rotate: -45
                            }
                        }
                    })]
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-Zor3B.framer-1pnkf3v, .framer-Zor3B .framer-1pnkf3v { display: block; }", ".framer-Zor3B.framer-1n8bmhl { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 24px; height: 48px; justify-content: center; overflow: hidden; padding: 0px 24px 0px 24px; position: relative; width: 48px; will-change: var(--framer-will-change-override, transform); }", ".framer-Zor3B .framer-l7bs99 { flex: none; height: 1px; left: calc(50.00000000000002% - 24px / 2); overflow: hidden; position: absolute; top: 19px; width: 24px; will-change: var(--framer-will-change-override, transform); z-index: 1; }", ".framer-Zor3B .framer-15evzfg { bottom: 19px; flex: none; height: 1px; left: calc(50.00000000000002% - 24px / 2); overflow: hidden; position: absolute; width: 24px; will-change: var(--framer-will-change-override, transform); z-index: 1; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-Zor3B.framer-1n8bmhl { gap: 0px; } .framer-Zor3B.framer-1n8bmhl > * { margin: 0px; margin-left: calc(24px / 2); margin-right: calc(24px / 2); } .framer-Zor3B.framer-1n8bmhl > :first-child { margin-left: 0px; } .framer-Zor3B.framer-1n8bmhl > :last-child { margin-right: 0px; } }", ".framer-Zor3B.framer-v-lzdn8n .framer-l7bs99 { top: calc(50.00000000000002% - 1px / 2); }", ".framer-Zor3B.framer-v-lzdn8n .framer-15evzfg { bottom: unset; top: calc(50.00000000000002% - 1px / 2); }", ".framer-Zor3B.framer-v-1n8bmhl.hover .framer-l7bs99 { bottom: 19px; top: unset; }", ".framer-Zor3B.framer-v-1n8bmhl.hover .framer-15evzfg { bottom: unset; top: 19px; }", ".framer-Zor3B.framer-v-lzdn8n.hover .framer-15evzfg { bottom: unset; }"];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 48
 * @framerIntrinsicWidth 48
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]},"EENmTdWKA":{"layout":["fixed","fixed"]},"vJOvIiDYt":{"layout":["fixed","fixed"]},"Wh_yXNEzS":{"layout":["fixed","fixed"]}}}
 * @framerVariables {"xziRj2ur1":"click"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerLjIOUvYuE = withCSS(Component, css, "framer-Zor3B");
export default FramerLjIOUvYuE;
FramerLjIOUvYuE.displayName = "Menu";
FramerLjIOUvYuE.defaultProps = {
    height: 48,
    width: 48
};
addPropertyControls(FramerLjIOUvYuE, {
    variant: {
        options: ["xSZVkabv0", "EENmTdWKA"],
        optionTitles: ["Default", "Close"],
        title: "Variant",
        type: ControlType.Enum
    },
    xziRj2ur1: {
        title: "Click",
        type: ControlType.EventHandler
    }
});
addFonts(FramerLjIOUvYuE, [{
    explicitInter: true,
    fonts: []
}], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "default": {
            "type": "reactComponent",
            "name": "FramerLjIOUvYuE",
            "slots": [],
            "annotations": {
                "framerImmutableVariables": "true",
                "framerComponentViewportWidth": "true",
                "framerVariables": "{\"xziRj2ur1\":\"click\"}",
                "framerIntrinsicHeight": "48",
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"fixed\",\"fixed\"]},\"EENmTdWKA\":{\"layout\":[\"fixed\",\"fixed\"]},\"vJOvIiDYt\":{\"layout\":[\"fixed\",\"fixed\"]},\"Wh_yXNEzS\":{\"layout\":[\"fixed\",\"fixed\"]}}}",
                "framerDisplayContentsDiv": "false",
                "framerIntrinsicWidth": "48",
                "framerContractVersion": "1"
            }
        },
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}
//# sourceMappingURL=./LjIOUvYuE.map