// Generated by Framer (b4533c2)

import { addFonts, ComponentViewportProvider, cx, getFonts, getFontsFromSharedStyle, Link, RichText, SmartComponentScopedContainer, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import { Time as TimeDate } from "https://framerusercontent.com/modules/HYcHVPAbe8jLEeU7c4mp/QiycTxX7vdblEOi3o00G/Time.js";
import * as sharedStyle1 from "../css/WxNbywKa4";
import * as sharedStyle from "../css/YxqFnMjeX";
import getLocalizedValue from "../localization/IpK4gDDfv";
const TimeDateFonts = getFonts(TimeDate);

const serializationHash = "framer-dTT4R"

const variantClassNames = {QUPSxhhsU: "framer-v-1udc56e"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({height, id, width, ...props}) => { return {...props} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const { style, className, layoutId, variant, ...restProps } = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "QUPSxhhsU", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = [sharedStyle.className, sharedStyle1.className]

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-1udc56e", className, classNames)} data-framer-name={"Variant 1"} layoutDependency={layoutDependency} layoutId={"QUPSxhhsU"} ref={refBinding} style={{...style}}><RichText __fromCanvasComponent children={getLocalizedValue("v0", activeLocale) ?? <React.Fragment><motion.p className={"framer-styles-preset-1e15hu7"} data-styles-preset={"YxqFnMjeX"} style={{"--framer-text-color": "var(--extracted-r6o4lv, var(--token-9ac73791-4104-4253-8947-ec829a0f0956, rgb(102, 102, 102)))"}}>Â©</motion.p></React.Fragment>} className={"framer-9mm6zj"} fonts={["Inter"]} layoutDependency={layoutDependency} layoutId={"Dg8MonMTY"} style={{"--extracted-r6o4lv": "var(--token-9ac73791-4104-4253-8947-ec829a0f0956, rgb(102, 102, 102))", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline"}} verticalAlignment={"top"} withExternalLayout/><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-162jz13-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"pg2nlVsm_-container"} nodeId={"pg2nlVsm_"} rendersWithMotion scopeId={"IpK4gDDfv"}><TimeDate color={"var(--token-9ac73791-4104-4253-8947-ec829a0f0956, rgb(102, 102, 102))"} font={{fontFamily: "\"Kumbh Sans\", \"Kumbh Sans Placeholder\", sans-serif", fontSize: "12px", fontStyle: "normal", fontWeight: 400, letterSpacing: "0em", lineHeight: "1.2em"}} height={"100%"} id={"pg2nlVsm_"} layoutId={"pg2nlVsm_"} monthFormat={"long"} outputType={"date"} showMinutes showMonth={false} showSeconds showWeekday={false} showYear tabularFont timeFormat={"24h"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><RichText __fromCanvasComponent children={getLocalizedValue("v1", activeLocale) ?? <React.Fragment><motion.p className={"framer-styles-preset-1e15hu7"} data-styles-preset={"YxqFnMjeX"} style={{"--framer-text-color": "var(--extracted-r6o4lv, var(--token-9ac73791-4104-4253-8947-ec829a0f0956, rgb(102, 102, 102)))"}}><Link href={"https://www.uihub.design/"} motionChild nodeId={"ptCPNO8DT"} openInNewTab relValues={[]} scopeId={"IpK4gDDfv"} smoothScroll={false}><motion.a className={"framer-styles-preset-1pyy1mn"} data-styles-preset={"WxNbywKa4"}>UIhub.design</motion.a></Link></motion.p></React.Fragment>} className={"framer-xb6uv2"} fonts={["Inter"]} layoutDependency={layoutDependency} layoutId={"ptCPNO8DT"} style={{"--extracted-r6o4lv": "var(--token-9ac73791-4104-4253-8947-ec829a0f0956, rgb(102, 102, 102))"}} verticalAlignment={"top"} withExternalLayout/></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-dTT4R.framer-1uvmrgk, .framer-dTT4R .framer-1uvmrgk { display: block; }", ".framer-dTT4R.framer-1udc56e { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }", ".framer-dTT4R .framer-9mm6zj, .framer-dTT4R .framer-xb6uv2 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", ".framer-dTT4R .framer-162jz13-container { flex: none; height: auto; position: relative; width: auto; }", ...sharedStyle.css, ...sharedStyle1.css]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 17
 * @framerIntrinsicWidth 138.5
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerIpK4gDDfv: React.ComponentType<Props> = withCSS(Component, css, "framer-dTT4R") as typeof Component;
export default FramerIpK4gDDfv;

FramerIpK4gDDfv.displayName = "Copyright";

FramerIpK4gDDfv.defaultProps = {height: 17, width: 138.5};

addFonts(FramerIpK4gDDfv, [{explicitInter: true, fonts: [{family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400"}, {family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400"}, {family: "Kumbh Sans", source: "google", style: "normal", url: "https://fonts.gstatic.com/s/kumbhsans/v26/c4mP1n92AsfhuCq6tVsaoIx1LQICk0boNoq0SjlDfnzKo-bF3mdQkZYA9LTuUkqaLg.woff2", weight: "400"}]}, ...TimeDateFonts, ...getFontsFromSharedStyle(sharedStyle.fonts), ...getFontsFromSharedStyle(sharedStyle1.fonts)], {supportsExplicitInterCodegen: true})