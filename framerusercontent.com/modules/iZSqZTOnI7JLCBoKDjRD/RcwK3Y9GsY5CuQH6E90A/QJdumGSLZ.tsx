// Generated by Framer (ab692b1)

import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, CycleVariantState, getFonts, SmartComponentScopedContainer, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "framer";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import { Icon as Phosphor } from "https://framerusercontent.com/modules/tYScH7LTqUtz5KUaUAYP/p8dptk4UIND8hbFWz9V7/Phosphor.js";
const PhosphorFonts = getFonts(Phosphor);

const serializationHash = "framer-MMwxq"

const variantClassNames = {A0ytmC0JB: "framer-v-1789rqi"};

function addPropertyOverrides(overrides, ...variants) {
const nextOverrides = {}
variants?.forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]))
return nextOverrides
}

const transition1 = {bounce: 0.2, delay: 0, duration: 0.4, type: "spring"}

const Transition = ({value, children}) => {
const config = React.useContext(MotionConfigContext)
const transition = value ?? config.transition
const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)])
return <MotionConfigContext.Provider value={contextValue}>{children}</MotionConfigContext.Provider>
}

const Variants = motion.create(React.Fragment)

const getProps = ({color, height, id, width, ...props}) => { return {...props, y7Kysh53S: color ?? props.y7Kysh53S ?? "var(--token-5df573a8-5c6e-4a5b-bca6-248c4c391d54, rgb(255, 255, 255))"} }

const createLayoutDependency = (props, variants) => {if (props.layoutDependency) return variants.join('-') + props.layoutDependency
return variants.join('-')}

export interface Props extends React.HTMLAttributes<HTMLDivElement> { style?: Record<string, unknown>;className?: string;layoutId?: string | number;color?: string; }

const Component = React.forwardRef<HTMLDivElement, Props>(function(props, ref) {

const fallbackRef = useRef<HTMLElement>(null)

const refBinding = ref ?? fallbackRef

const defaultLayoutId = React.useId()

const { activeLocale, setLocale } = useLocaleInfo()

const componentViewport = useComponentViewport()

const {style, className, layoutId, variant, y7Kysh53S, ...restProps} = getProps(props)

const {baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants} = useVariantState({defaultVariant: "A0ytmC0JB", ref: refBinding, variant, variantClassNames})

const layoutDependency = createLayoutDependency(props, variants)

const sharedStyleClassNames = []

const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames)

return (<LayoutGroup id={layoutId ?? defaultLayoutId}><Variants animate={variants} initial={false}><Transition value={transition1}><motion.div {...restProps} {...gestureHandlers} className={cx(scopingClassNames, "framer-1789rqi", className, classNames)} data-framer-name={"Variant 1"} layoutDependency={layoutDependency} layoutId={"A0ytmC0JB"} ref={refBinding} style={{...style}}><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-w0t6db-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"RGXxLEgy7-container"} nodeId={"RGXxLEgy7"} rendersWithMotion scopeId={"QJdumGSLZ"}><Phosphor color={y7Kysh53S} height={"100%"} iconSearch={"House"} iconSelection={"Star"} id={"RGXxLEgy7"} layoutId={"RGXxLEgy7"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={"fill"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-esy78l-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"UhBbXhmT2-container"} nodeId={"UhBbXhmT2"} rendersWithMotion scopeId={"QJdumGSLZ"}><Phosphor color={y7Kysh53S} height={"100%"} iconSearch={"House"} iconSelection={"Star"} id={"UhBbXhmT2"} layoutId={"UhBbXhmT2"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={"fill"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-v2nqws-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"ZV_0ZB0ZM-container"} nodeId={"ZV_0ZB0ZM"} rendersWithMotion scopeId={"QJdumGSLZ"}><Phosphor color={y7Kysh53S} height={"100%"} iconSearch={"House"} iconSelection={"Star"} id={"ZV_0ZB0ZM"} layoutId={"ZV_0ZB0ZM"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={"fill"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-r7eh8-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"W4er2VcN4-container"} nodeId={"W4er2VcN4"} rendersWithMotion scopeId={"QJdumGSLZ"}><Phosphor color={y7Kysh53S} height={"100%"} iconSearch={"House"} iconSelection={"Star"} id={"W4er2VcN4"} layoutId={"W4er2VcN4"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={"fill"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider><ComponentViewportProvider ><SmartComponentScopedContainer className={"framer-7ox6x7-container"} isAuthoredByUser isModuleExternal layoutDependency={layoutDependency} layoutId={"EP8ljJXmw-container"} nodeId={"EP8ljJXmw"} rendersWithMotion scopeId={"QJdumGSLZ"}><Phosphor color={y7Kysh53S} height={"100%"} iconSearch={"House"} iconSelection={"Star"} id={"EP8ljJXmw"} layoutId={"EP8ljJXmw"} mirrored={false} selectByList style={{height: "100%", width: "100%"}} weight={"fill"} width={"100%"}/></SmartComponentScopedContainer></ComponentViewportProvider></motion.div></Transition></Variants></LayoutGroup>)

});

const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-MMwxq.framer-lo1go0, .framer-MMwxq .framer-lo1go0 { display: block; }", ".framer-MMwxq.framer-1789rqi { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 4px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-MMwxq .framer-w0t6db-container, .framer-MMwxq .framer-esy78l-container, .framer-MMwxq .framer-v2nqws-container, .framer-MMwxq .framer-r7eh8-container, .framer-MMwxq .framer-7ox6x7-container { flex: none; height: 12px; position: relative; width: 12px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-MMwxq.framer-1789rqi { gap: 0px; } .framer-MMwxq.framer-1789rqi > * { margin: 0px; margin-left: calc(4px / 2); margin-right: calc(4px / 2); } .framer-MMwxq.framer-1789rqi > :first-child { margin-left: 0px; } .framer-MMwxq.framer-1789rqi > :last-child { margin-right: 0px; } }"]

/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 12
 * @framerIntrinsicWidth 76
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]}}}
 * @framerVariables {"y7Kysh53S":"color"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */
const FramerQJdumGSLZ: React.ComponentType<Props> = withCSS(Component, css, "framer-MMwxq") as typeof Component;
export default FramerQJdumGSLZ;

FramerQJdumGSLZ.displayName = "5-stars";

FramerQJdumGSLZ.defaultProps = {height: 12, width: 76};

addPropertyControls(FramerQJdumGSLZ, {y7Kysh53S: {defaultValue: "var(--token-5df573a8-5c6e-4a5b-bca6-248c4c391d54, rgb(255, 255, 255)) /* {\"name\":\"Light 100\"} */", title: "Color", type: ControlType.Color}} as any)

addFonts(FramerQJdumGSLZ, [{explicitInter: true, fonts: []}, ...PhosphorFonts], {supportsExplicitInterCodegen: true})